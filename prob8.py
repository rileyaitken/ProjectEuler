def prob8(x, n):
    """Finds the x adjacent digits in the number (which has to be passed as a string
    to not be out of bounds), n, that produce the greatest
    possible product, and returns said product."""
    product = float('-inf')
    digits = [int(i) for i in n]
    print(digits)
    for i in range(0, len(digits) - x - 1):
        new_product = 1
        for j in range(i, i + x):
            new_product *= digits[j]
        if new_product > product:
            product = new_product
            print(digits[i:i+13])
    return product

def brute(n):
    product = 0
    digits = [int(i) for i in n]
    for i in range(0, len(digits) - 12):
        new_product = 1
        for j in range(i, i + 13):
            new_product *= digits[j]
        if new_product > product:
            product = new_product
    return product

number = "622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"

print(prob8(13, number))        